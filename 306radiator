#!/usr/bin/env python3

import sys
import numpy as np
import math

h = 0.5
xr = 0
yr = 0
roomSize = 0

def usage():
    print("USAGE")
    print("\t./306radiator n ir jr [i j]\n")
    print("DESCRIPTION")
    print("\tn\t\tsize of the room")
    print("\t(ir, jr)\tcoordinates of the radiator")
    print("\t(i, j)\tcoordinates of a point in the room")

def printer(M):
    for j in range(0, roomSize*roomSize):
        for i in range(0, roomSize*roomSize):
            if (i == roomSize*roomSize - 1):
                print(M[j][i])
            else:
                print(M[j][i], end="\t")
    print()

def createMatrix():
    M = np.zeros((roomSize*roomSize, roomSize*roomSize), dtype=int)
    for j in range(0, roomSize*roomSize):
        for i in range(0, roomSize*roomSize):
            if i < roomSize or i > (roomSize*roomSize - roomSize) - 1:
                M[i][i] = 1
            elif j % roomSize == 0 or j % roomSize == (roomSize - 1):
                M[j][j] = 1
            elif M[j][i] == 0 and i == j:
                M[j][i] = -4/pow(h, 2)
                M[j][i-1] = M[j][i+1] = 1/pow(h, 2)
                M[j][i-roomSize] = M[j][i+roomSize] = 1/pow(h, 2)
    return M

def createVectorY():
    Y = np.ones((roomSize*roomSize, 1))
    Y[xr+roomSize*yr]=-300.0
    for j in range(0, roomSize):
        for i in range(0, roomSize):
            if i == 0 or j == 0 or i == roomSize - 1 or j == roomSize - 1:
                Y[i+roomSize*j]=0
            else:
                pass

def main():
    global roomSize, xr, yr
    if sys.argv[1] == "-h":
        usage()
    else:
        if len(sys.argv) != 4 and len(sys.argv) != 6:
            exit(84)
        else:
            roomSize = int(sys.argv[1])
            xr = int(sys.argv[2])
            yr = int(sys.argv[3])
            printer(createMatrix())
            createVectorY()
        return

if __name__ == "__main__":
    try:
        main()
    except:
        usage()
        exit(84)
